from sqlalchemy import Column
from sqlalchemy import Table

from sqlalchemy import Integer
from sqlalchemy import Unicode
from sqlalchemy import String
from sqlalchemy import Sequence
from sqlalchemy import Index
from sqlalchemy import ForeignKey

from sqlalchemy.orm import mapper
from sqlalchemy.orm import relationship

from newco.models import Base

class EventPlanner(Base):
    """ Store each Event Planner """
    __tablename__ = 'eventPlanner'

    # Primary Key
    id = Column(Integer, Sequence('ep_id_seq'), primary_key = True)

    # Columns
    firstName = Column(String(20), nullable = False)
    lastName = Column(String(60), nullable = False)
    userName = Column(String(16), index = True, nullable = False)
    password = Column(String(24), nullable = False)

    # Relationships
    emails = relationship("EventPlannerEmail", backref='eventPlanner')
    phoneNumbers = relationship("EventPlannerPhone", backref='eventPlanner')

    """
    def __init__(self, firstName, lastName, userName, password):
        self.firstName = firstName
        self.lastName = lastName
        self.userName = userName
        self.password = password
    """

class EventPlannerEmail(Base):
    """ Store each Email associated with an Event Planner """
    __tablename__ = 'eventPlannerEmail'
    # Primary Key
    id = Column(Integer, Sequence('epe_id_seq'), primary_key = True)
    # Columns
    email = Column(String(60))
    eventPlanner_id = Column(Integer, ForeignKey("eventPlanner.id"), nullable = False)

class EventPlannerPhone(Base):
    """ Store each Phone Number associated with an Event Planner """
    __tablename__ = 'eventPlannerPhone'

    # Primary Key
    id = Column(Integer, Sequence('epp_id_seq'), primary_key = True)

    # Columns
    phone = Column(String, nullable = False)
    eventPlanner_id = Column(Integer, ForeignKey('eventPlanner.id'), nullable = False)

