# -*- sh -*-
servers = (
  { address = "eu.irc6.net"; chatnet = "IRCnet"; port = "6667"; },
  { address = "open.ircnet.net"; chatnet = "IRCnet"; port = "6667"; },
  { address = "irc.efnet.org"; chatnet = "EFNet"; port = "6667"; },
  { 
    address = "irc.undernet.org";
    chatnet = "Undernet";
    port = "6667";
  },
  { address = "irc.dal.net"; chatnet = "DALnet"; port = "6667"; },
  { 
    address = "irc.quakenet.org";
    chatnet = "QuakeNet";
    port = "6667";
  },
  { address = "irc.oftc.net"; chatnet = "OFTC"; port = "6667"; },
  {
    address = "irc.gamesurge.net";
    chatnet = "GameSurge";
    port = "6667";
  },
  { address = "irc.webchat.org"; chatnet = "WebChat"; port = "6667"; },
  { address = "irc.rizon.net"; chatnet = "Rizon"; port = "6667"; },
  { address = "irc.link-net.org"; chatnet = "LinkNet"; port = "6667"; },
  { address = "silc.silcnet.org"; chatnet = "SILC"; port = "706"; },
  {
    address = "localhost";
    chatnet = "bitl";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "irc.gtanet.com";
    chatnet = "gtanet";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "irc.gamesurge.net";
    chatnet = "gs";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "yes";
  }
);

chatnets = {
  IRCnet = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "5";
    max_whois = "4";
    max_query_chans = "5";
  };
  EFNet = { 
    type = "IRC";
    max_kicks = "4";
    max_msgs = "3";
    max_whois = "1";
  };
  Undernet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  DALnet = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "3";
    max_whois = "30";
  };
  QuakeNet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  OFTC = { 
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  GameSurge = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  WebChat = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  Rizon = { 
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  LinkNet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  SILC = { type = "SILC"; };
  gtanet = { type = "IRC"; nick = "Prontera"; };
  bitl = { type = "IRC"; nick = "Aretnorp"; };
  gs = { type = "IRC"; nick = "Prontera"; };
};

channels = (
  { name = "#irssi"; chatnet = "ircnet"; autojoin = "No"; },
  { name = "silc"; chatnet = "silc"; autojoin = "No"; },
  { name = "#ulk"; chatnet = "gtanet"; autojoin = "yes"; },
  { name = "#xe.european"; chatnet = "gtanet"; autojoin = "yes"; },
  { name = "#mm2c"; chatnet = "gs"; autojoin = "yes"; },
  { name = "#4d"; chatnet = "gs"; autojoin = "yes"; },
  { name = "#operationflashpoint"; chatnet = "gs"; autojoin = "yes"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  UPTIME = "eval exec - expr `date +%s` - \\$F | awk '{print \"Irssi uptime: \"int(\\\\\\$1/3600/24)\"d \"int(\\\\\\$1/3600%24)\"h \"int(\\\\\\$1/60%60)\"m \"int(\\\\\\$1%60)\"s\" }'";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  wk = "wc";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb %K$Z%n}";
    user = "           %K|%n";
    topic = "           %KTopic| %y$topic";
    #
    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb  $winref%K:%n$T%K(%n{sbmode $M}%K)%n}";
    window_empty = "{sb  $winref{sbservertag $tag}}";
    prompt = "{sbmode $[-4]usermode} {sb $cumode_space$[-9]N%K|%n} ";
    prompt_empty = "{sbmode $[-4]usermode} {sb $cumode_space$[-9]N%K|%n} ";

    # all of these treated specially, they're only displayed when needed
    lag = "   {sb Lag: $0-}";
    act = "   {sb Act%K:%n $0-}";
    away = "   {sbaway $A}";
    more = "   -- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      type = "window";
      placement = "bottom";
      position = "100";
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        away = { priority = "-1"; };
        more = { priority = "-1"; };
        mood_bar = { alignment = "right"; priority = "-1"; };
        mail = { alignment = "right"; priority = "-1"; };
        dccstat = { alignment = "right"; };
        usercount = { alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "top";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "window";
      placement = "top";
      position = "1";
      visible = "never";
      items = {
        barstart = { priority = "100"; };
        topic = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    dccstat = { disabled = "yes"; };
  };
};

keyboard = (
  { key = "insert"; id = "command"; data = "/window grow 1"; },
  { key = "delete"; id = "command"; data = "/window shrink 1"; },
  { key = "meta-delete"; id = "delete_previous_word"; data = ""; }
);



settings = {
  "fe-common/core" = {
    autolog = "yes";
    autolog_path = "~/.irssi/logs/$tag/$0.log";
    beep_msg_level = "msgs";
    beep_when_away = "no";
    beep_when_window_active = "no";
    bell_beeps = "yes";
    completion_char = ",";
    hide_server_tags = "yes";
    hilight_nick_matches = "no";
    window_auto_change = "no";
    window_check_level_first = "yes";
    window_history = "yes";
  };
};
logs = { };
windows = {
  2 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#testje";
        tag = "freenode";
      }
    );
    sticky = "yes";
  };
  1 = {
    name = "(status)";
    level = "CRAP NOTICES SNOTES CTCPS JOINS PARTS QUITS KICKS MODES TOPICS WALLOPS NICKS CLIENTNOTICES CLIENTCRAP CLIENTERRORS HILIGHTS";
    sticky = "yes";
    scroll = "yes";
  };
};
mainwindows = {
  2 = { first_line = "13"; lines = "35"; };
  1 = { first_line = "0"; lines = "13"; };
};
